@page "/"
@rendermode InteractiveServer
@inject IFirebaseAuthStateProvider CustomAuthenticationStateProvider
@inject IUserService userService
@inject IRepository<BudgetDTO> budgetService



<h3>Local Storage Example</h3>


<button @onclick="Register">Register</button>
<button @onclick="LoadFromLocalStorage">Get authKey</button>

<button @onclick="Login">Login</button>




@code {
    private async Task Register()
    {
        var userDTO = await CustomAuthenticationStateProvider.RegisterAsync("test@test.com", "123lösen", "tester");

        var test = await CustomAuthenticationStateProvider.LoginAsync(userDTO.Email, userDTO.Password);

        Console.WriteLine("ANVÄNDARE REGISTRERAD");

        await userService.AddAsync(userDTO);

		var budget = new BudgetDTO
			{
				Year = 2025,
				Month = 12,
				TransactionIds = new List<string>()
			};

        await budgetService.AddAsync(budget, test);

    }

    private async Task LoadFromLocalStorage()
    {
        var authKey = await CustomAuthenticationStateProvider.CheckAuthenticatedAsync();
    }

    

    private async Task Login()
    {
        var user = new UserDTO
        {
            Id = "PhilipUSER",
            Password = "123korv",
            Email = "Korv@hotmail.com"
        };

        await CustomAuthenticationStateProvider.LoginAsync(user.Email, user.Password);
    }

}

